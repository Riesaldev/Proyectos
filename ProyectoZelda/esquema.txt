'Modo estricto para una mejor gestión de errores y prácticas recomendadas'

Const que selecciona el elemento de la línea temporal en el DOM (querySelector, timeline)
Const que selecciona el formulario de eventos en el DOM (getElemetById, eventForm)
Declarar una variable events en el ámbito global para almacenar los eventos(vacio, events)

Función asíncrona para obtener los eventos desde un archivo JSON (async fetchEvent)

	Realiza una solicitud para obtener el archivo JSON (const response)
        Convierte la respuesta en un objeto JSON y lo asigna a la variable vacía ( events=await response)
        Devuelve la variable (events)
        
	Muestra un mensaje de error en la consola si la solicitud falla (Error fetching events)
        Devuelve un array vacío en caso de error ([])

*Función para crear una tarjeta de evento en el DOM (events)

	Crea un nuevo elemento div (const div)
	Añade la clase 'event' al div (add)

    	Añade el contenido HTML a la tarjeta de evento (innerHTML)

    		Imagen del evento (img)
        	Fecha y título del evento (h2)
        	Descripción del evento (p)

       Devuelve el div creado

*Función para mostrar los eventos en la línea temporal (displayEvents)

    Ordena los eventos por fecha (const sortedEvents)
    Crea un fragmento de documento para mejorar el rendimiento (const fragment)

    Itera sobre los eventos ordenados y crea una tarjeta para cada uno( forEach=>)
    	Crea una tarjeta de evento (const eventCard)
    	Añade la tarjeta al fragmento (appendChild)


  Añade el fragmento a la línea temporal en el DOM (appendChild)

*Manejador de eventos para el formulario de añadir nuevos eventos (submit,e.prevent)

	Prevenir el comportamiento por defecto del formulario (preventDefault)
    	Obtiene el archivo de imagen seleccionado (const fileInput)
    	Crea un nuevo lector de archivos (const reader)
	
	Función que se ejecuta cuando el lector de archivos ha leído el archivo (reader.onload)

   		Obteniendo el valor del año del formulario (year.value)
            	Obteniendo el valor del título del formulario (title.value)
            	Obteniendo la URL de la imagen leída (target.result)
            	Obteniendo el valor de la descripción del formulario (text.value)
        
        Añade el nuevo evento al array de eventos (push)
        Limpia la línea temporal (='') para que no hayan duplicados
        Vuelve a mostrar los eventos con el nuevo evento añadido (diplayEvents)
        Resetea el formulario (.reset)

  	Si obtiene una imagen (if(fileImput))

	  Lee el archivo de imagen como una URL de datos (.readAsDataURL)

		} else { (const newEvent)

   		Obtiene el valor del año del formulario (year.value)
   		Obtiene el valor del título del formulario(title.value)
   		Usa una imagen predeterminada si no se selecciona ninguna imagen ('path/to/default-image.jpg)
   		Obtiene el valor de la descripción del formulario(text.value)
        
        Añade el nuevo evento al array de eventos (push)
        Limpia la línea temporal (='')
        Vuelve a mostrar los eventos con el nuevo evento añadido (diplayEvents)
        Resetea el formulario (.reset)

*Función de inicialización para cargar y mostrar los eventos al cargar la página (async init)

	Obtiene los eventos desde el archivo JSON (await)
	Muestra los eventos en la línea temporal (displayEvents)

Llama a la función de inicialización (init())
